### Namespace ###
namespace: default

### Service Account ###
serviceAccount:
  metadata:
    name: postgres
  automountServiceAccountToken: true

### Service Defaults ###
serviceDefaults:
  metadata:
    name: postgres
  spec:
    protocol: tcp

### Service ###
service:
  metadata:
    name: postgres
    labels:
      app: postgres
  spec:
    type: ClusterIP
    ports:
      - port: 5432
        targetPort: 5432
        protocol: TCP
### You can add multiple ports if you like just do so in the following way 
#     - port: 443
#       target: 443
#       protocol

### Config Map ### 
#configmap:
#  metadata:
#    name: nginx-configmap

### Service Intentions ###
serviceIntentions:
  metadata:
    name: product-api-to-postgres
  spec:
    destination:
      name: postgres
    sources:
    - name: product-api
      action: allow
#      permissions:
#      - action: allow
#        http:
#          pathExact: "/health"
#      - action: allow
#        http:
#          pathPrefix: "/"
#          methods:
#          - GET
#          - PUT
#          - POST
#          - DELETE
#          header:
#          - name: "Authorization"
#            present: true
#      - action: allow
#        http:
#          pathPrefix: "/"

### Deployment ###
deployment:
  metadata:
    name: postgres
    labels:
      app: postgre
  spec:
    replicaCount: 1
    selector:
      matchLabels:
        service: postgres
        app: postgres
    template:
      metadata:
        labels:
          service: postgres
          app: postgres
### enables annotations section ###
        annotationenable: enabled
### set to enabled if you want it to add the annotation section ###
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9102"
          consul.hashicorp.com/connect-inject: "true"
      spec:
### enables securityContext section ###
#       securityContextenabled: enabled
### set to enabled if you want it to add the securityContext section and uncomment section and place in values ###
#       securityContext:
#         runAsGroup: 1000
#         runAsUser: 1000
### enable imagePullSecrets ###
#       imagePullSecretsenabled: enabled
### set to enabled if you want it to add the imagePullSecrets section uncomment section and place in values ### 
#       imagePullSecrets:
#       - name: "josh secret"
### enables use of Volume ###
        volumesenabled: enabled
### set to enabled if you want it to add the Volumes section and uncomment section and place in values you want ### 
### You also have the ability to add multiple volumes by copy and pasting the existing settings below the end of the first volume section
####### add information under volues or enable configmap
        volumes:
        - name: pgdata
### enabled config map section
#          configMapEnabled: enabled
#          configMap:
#            name: nginx-configmap
#            items:
#            - key: default.conf
#              path: default.conf
        containers:
### You have the ability to add multiple containers if wanted just copy and past the values starting with -name below that ending of the first container###
          - name: postgres
            image: hashicorpdemoapp/product-api-db:v0.0.18
            ports:
### You have the ability to add more than one port if needed copy and past the new port inform below the existing and change the values
              - name: "postgres"
                containerPort: 5432
### enabled env section of deployment with the uncommenting envEnabled the helm template well loop through env values
            envEnabled: enabled
### example
            env:
              - name: POSTGRES_DB
                value: products
              - name: POSTGRES_USER
                value: postgres
              - name: POSTGRES_PASSWORD
                value: password
### Enabled args section ####
            argsEnabled: enabled
### to added args section uncomment and enter values needed
### example:
            args: ["-c", "listen_addresses=127.0.0.1"]
### You if you have a volumeMount make sure volumeMountsenabled is uncommented. If you do not have a volumeMount please comment volumeMountsenabled
            volumeMountsenabled: enabled
            volumeMounts:
### You have the ability to add more than one volumeMount if needed copy and past the new volumeMount inform below the existing and change the values
              - name: pgdata
                mountPath: /var/lib/postgresql/data
                readOnly: false
### enables use of resources ###
#            resourcesEnabled: enabled
### set to enabled if you want it to add the resources section and uncomment section and place in values ###
# example below
#            resources:
#              requests:
#                memory: "128Mi"
#                cpu: "100m"
#              limits:
#                memory: "256Mi"
#                cpu: "200m"
### enables use of readinessProd ###
#            readinessProbeEnabled: enabled
### set to enabled if you want it to add the readinessProbe section and uncomment section and place in values ###
# example below
#            readinessProbe:
#              initialDelaySeconds: 10
#              httpGet:
#                port: flask
#                path: /
### enables use of livinessProbe:
#            livenessProbeEnabled: enabled
### set to enabled if you want it to add the livinessProbe section and uncomment section and place in values ###
# example below
#            livenessProbe:
#              initialDelaySeconds: 10
#              exec:
#                command:
#                  - /bin/sh
#                  - -c
#                  - 'pidof -x flask'
### enables use of container securityContext:
#            securityContextContainerEnabled: enabled
### set to enabled if you want it to add the container securityContext section and uncomment section and place in values ###
# example below
#            securityContext:
#              allowPrivilegeEscalation: false
#              readOnlyRootFilesystem: true
#              capabilities:
#                drop:
#                  - all
#                add:
#                  - NET_BIND_SERVICE

#### Ingress ###
#ingress:
#  metadata:
#    name: alb-gateway
### Enabled annotation section ###
#    annotationEnabled: enabled
### set to enabled if you want it to add the Annotation section and uncomment section and place in values ###
### example
#    annotations:
#      alb.ingress.kubernetes.io/scheme: internal
#      alb.ingress.kubernetes.io/target-type: ip
#      alb.ingress.kubernetes.io/load-balancer-name: test-alb-dev
#      alb.ingress.kubernetes.io/tags: Environment=dev,TechContact=michael.melton@kinsaleins.com,Owner=michael.melton@kinsaleins.com,Application=EKSIngress,Component=ALB
#      alb.ingress.kubernetes.io/inbound-cidrs: 10.0.0.0/8, 172.16.8.0/22
#  spec:
#    ingressClassName: alb
#    rules:
#   - host: "kinsale.com"
#    - http:
#        paths:
#        - path: /
#          pathType: Prefix
#          backend:
#            service:
#              name: frontend
#              port:
#                number: 80